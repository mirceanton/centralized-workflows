---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Reusable - Terraform CI

on:
  workflow_call:
    inputs:
      terraform-version:
        type: string
        description: The Terraform version to use.
        required: false
        default: "3.12"
      tflint-enabled:
        type: boolean
        description: Whether to run tflint.
        required: false
        default: true
      tflint-version:
        type: string
        description: The version of tflint to use.
        required: false
        default: "1.35.1"
      tflint-args:
        type: string
        description: Additional arguments to pass to tflint.
        required: false
        default: ""
      working-directory:
        type: string
        description: The directory to lint.
        required: false
        default: "."

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform-version }}"

      - name: Run terraform fmt
        working-directory: "${{ inputs.working-directory }}"
        run: terraform fmt -check=true

  lint:
    runs-on: ubuntu-latest
    if: ${{ inputs.tflint-enabled }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform-version }}"

      - name: Cache plugin dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: "${{ inputs.tflint-version }}"

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"

      - name: Run tflint
        run: tflint ${{ inputs.tflint-args }}

  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform-version }}"

      - name: Run terraform validate
        working-directory: "${{ inputs.working-directory }}"
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: ["validate"]
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform-version }}"

      - name: Run terraform plan
        working-directory: "${{ inputs.working-directory }}"
        run: terraform plan
